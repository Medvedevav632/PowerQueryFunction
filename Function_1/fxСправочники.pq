let
Справочник = [
	readme = "Справочники проекта v 1.0",
	Общие = [ 
		Спр_ФормыОтчетности = [ // Справочник форм отчетности 
			Источник = #table(type table 
				[   КодБКС          = text, 
					Report_ID       = text, 
					Название        = text, 
					КраткоеНазвание = text, 
					Примечание      = text   ],
				{   {"0112",    "balance",  "Баланс",                                               "ББ",   ""}, 
					{"0212",    "opu",      "Отчет и прибылях и убытках",                           "ОПУ",  ""},
					{"0312",    "ved_odr",  "Отчет о доходах, расходах и финансовых результатах",   "ОДРФР",""},
					{"0412",    "odds",     "Отчет о движении денежных средств",                    "ОДДС", ""},
					{"0512",    "pril",     "Приложение к бухгалтерскому балансу",                  "ПББ",  ""},
					{"3012",    "oik",      "Отчет об изменении капитала",                          "ОИК",  ""},
					{"0612",    "osr1",     "Отчет о состоянии расчетов",                           "ОСР",  ""},
					{"06R1",    "osr2",     "Отчет о состоянии расчетов new",                       "ОСР",  ""},
					{"1212",    "ofr1",     "Отчет о финансовых результатах",                       "ОФР",  ""},
					{"12f1",    "ofr2",     "Отчет о финансовых результатах",                       "ОФР",  ""}  
				}
			)
			] [Источник],

		Спр_Год =  // Справочник периодов
			Table.FromList({2017..2024}, Splitter.SplitByNothing(), type table [Год = number]),
				
		Спр_Область = // Справочник областных городов
			let Источник = Table.Buffer(#table(type table [
						Область_ID 	= number, 
						Область 	= text	],
					{
						{1,"Брест"}, 
						{2,"Витебск"},
						{3,"Гомель"},
						{4,"Гродно"},
						{5,"Минск"},
						{6,"Могилев"} 
					}))
			in Источник
		],
		
	БАЛАНС = [ // Бухгалтерский баланс
		Спр_ББ_Часть   = // справочник частей 
			let Источник = #table(type table 
					[   
						Часть_ID = number, 
						ЧастьИмяПолное= text, 
						ЧастьИмяКраткое = text, 
						ЧастьАббревиутура = text
					],
					{  
						{1,	"Активы",								"Актив",	"А"}, 
						{2,	"Собственный капитал и обязательства", 	"Пассив",	"П"}
					}
				) 
			in 	Источник,
			
		Спр_ББ_Раздел  = // справочник разделов 
			let	Источник = #table(type table 
					[
						Раздел_ID = number, 
						РазделПрефикс= text, 
						РазделИмя = text, 
						РазделИмяПолное = text,
						РазделИмяСокращенное = text, 
						РазделИмяАббревиатура = text
					],
					{
						{1, "Раздел 1", "Долгосрочные активы",         "Раздел 1 Долгосрочные активы",         "ДолгАктивы",  "ДА" }, 
						{2, "Раздел 2", "Краткосрочные активы",        "Раздел 2 Краткосрочные активы",        "КраткАктивы", "КА" },
						{3, "Раздел 3", "Собственный капитал",         "Раздел 3 Собственный капитал",         "СобКапитал",  "СК" },
						{4, "Раздел 4", "Долгосрочные обязательства",  "Раздел 4 Долгосрочные обязательства",  "ДолгОбяз",    "ДО" },
						{5, "Раздел 5", "Краткосрочные обязательства", "Раздел 5 Краткосрочные обязательства", "КраткОбяз",   "КО" },
						{0, "Раздел 6", "Забалансовые счета",          "Раздел 0 Забалансовые счета",          "ЗабСчета",    "ЗС" }
					} ),
				selectRow = Table.SelectRows(Источник, each ([Раздел_ID] <> 0))
			in 	selectRow,
					
		Спр_ББ_Группа  = // справочник групп статей 
			let	Источник = #table(type table 
					[
						Группа_ID = number, 
						ГруппаИмя = text
					],
					{
						{1, "Группа"}, 
						{2, "Подгруппа"}
					} 
				)
			in 	Источник,
			
		Спр_ББ_Уровень = // справочник уровней 
				let Источник = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMlTSUbqw+GLDhX0XNl3YemHvxR4FsNDyCxsuNl5sutijFKsTrWSEqQostODChgvbL2wBCu0GqzPGVAcWWnixCWge0LSL/WB1JpjqwELzgQJbQPYiVMcCAA==", BinaryEncoding.Base64), Compression.Deflate)), 
					let _t = ((type nullable text) meta [Serialized.Text = true]) 
					in type table [Уровень_ID = _t, УровеньПрефикс = _t, УровеньИмя = _t]),
					tr = Table.TransformColumnTypes(Источник,{{"Уровень_ID", Int64.Type}, {"УровеньИмя", type text}})
				in  tr
		],
	
	ОПУ    = [ // Отчет о прибылях и убытках
		Спр_ОПУ_ВидДеятельности = 
			let Источник = #table(type table
					[   
						ВидДеятельности_ID  = Int64.Type,
						ДиапазонСтрок_ID    = text,
						ВидДеятельностиИмя  = text
					],
					{
						{1, "10..90",   "Текущая деятельность"}, 
						{2, "100..140", "Инвестиционная деятельность"},
						{3, "80..100",  "Другие показатели"}
					}
				)
			in Источник,
		
		Спр_ОПУ_ВидПрибыли 		= // справочник видов показателей прибыли
			let Источник = #table(type table [ 
				Прибыль_ID = Int64.Type, 
				ПрибыльВид = text ],
				{
					{1, "Показатели прибыли"}, 
					{2, "Другие показатели"}
				} )
			in Источник,
		
		Спр_ОПУ_Группа 			= // справочник групп статей
			let Источник = #table(type table [
				Группа_ID = number, 
				ГруппаИмя = text    ],
				{
					{1,"Группа"}, 
					{2,"Подгруппа"}
				} )
			in Источник
		], 
	
	ОДДС   = [ // Отчет о движении денежных средств
		Спр_ОДДС_ВидДеятельности = // 
			let Источник = #table(type table 
					[
						ВидДеятельности_ID   = Int64.Type,
						ДиапазонСтрокДеят_ID = text,
						ВидДеятельностиИмя 	 = text
					],
					{
						{1, "20..40",	"Текущая деятельность"}, 
						{2, "50..70",	"Инвестиционная деятельность"},
						{3, "80..100",	"Финансовая деятельность"}, 
						{4, "110..140",	" Другое"}
					}
					)
			in  Table.SelectColumns(Источник, {"ВидДеятельности_ID","ВидДеятельностиИмя"}),

		Спр_ОДДС_ВидДвижения 	 = // справочник видов движения
			let Источник = #table(type table 
					[
						ВидДвижения_ID  	 = Int64.Type,
						ДиапазонСтрокДвиж_ID = text, 
						ВидДвиженияИмя 		 = text
					],
					{
						{1, "20..24",	"Поступило"},
						{1, "50..55",	"Поступило"}, 
						{1, "80..84",	"Поступило"}, 
						{2, "30..34",	"Выбыло"},
						{2, "60..64",	"Выбыло"},
						{2, "90..95",	"Выбыло"},
						{3, "40",		"РезультатТек"}, 
						{4, "70",		"РезультатИнв"}, 
						{5, "100",		"РезультатФин"}, 
						{6, "110",		"РезультатОбщий"}, 
						{7, "120..140",	"Другие"}
					}
				)
			in  Table.SelectColumns(Источник, {"ВидДвижения_ID","ВидДвиженияИмя"})
		
		],

	ОСК    = [ // Отчет об изменении собственного капитала
		Спр_ОСК_Раздел = 
			let	from = #table(type table 
				[	
					Раздел_ID 	  = number, 
					РазделПрефикс = text, 
					РазделИмя 	  = text, 
					СтрокаНач     = number, 
					СтрокаКон     = number
				],
				{    
					{1, "Раздел 1", "Позапрошлый год", 10, 40}, 
					{2, "Раздел 2", "Прошлый год", 50, 130},
					{3, "Раздел 3", "Текущий год", 140, 200}
				}),
				to = Table.AddColumn(from, "РазделПолноеИмя", each [РазделПрефикс] & " " & [РазделИмя])
			in	Table.SelectColumns(to, {"Раздел_ID","РазделПрефикс","РазделИмя"})
		],
	
	ПРИЛОЖЕНИЕ = [ // ПРИЛОЖЕНИЕ К БАЛАНСУ
		Спр_Разделы 	= // Названия разделов отчета Приложение в Балансу
				let Источник = #table(type table 
					[   Раздел_ID     = number, 
						РазделПрефикс = text, 
						РазделИмя     = text, 
						Str1          = number,
						Str2          = number],
					{   {1, "Раздел 1", "Основные средства и нематериальные активы", 		1, 36}, 
						// {2, "Раздел 1", "Справочно. ", 1, 5}, 
						// {3, "Раздел 1", "Источники финансирования сложений ", 30, 36}, 
						{2, "Раздел 2", "Незавершенные вложения во внеоборотные активы", 	50, 65},
						{3, "Раздел 3", "Резервы по сомнительным долгам", 					70, 70},
						{4, "Раздел 4", "Финансовые вложения", 								80, 95},
						{5, "Раздел 5", "Полученные кредиты и займы", 						140, 171},
						{6, "Раздел 6", "Справка о платежах в бюджет и ФСЗН", 				1010, 1320},
						{7, "Раздел 7", "Забалансовые счета", 								1401, 1411}
					}),

					AddCol  = Table.AddColumn(Источник, "РазделИмяПрефикс", each [РазделПрефикс] & " " & [РазделИмя]),
					Reorder = Table.ReorderColumns(AddCol,
							let nms = Table.ColumnNames(AddCol), lst = {"РазделИмяПрефикс"}, col = 3  // 0 - если в начало
							in  List.InsertRange(List.Difference(nms, lst ), col, lst) ),
					SelCol = Table.SelectColumns(Reorder, List.FirstN(Table.ColumnNames(Reorder), 4) )
				in  SelCol,
			
		Спр_Заголовки 	= // заголовки разделов
				let Источник = #table(type table 
					[   
						IndexIn = text,      // порядковый номер в заголовка пределах раздела отчета
						ЗаголовокИмя = text, // имя заголовка 
						НомерРаздела = text  // номера разделов, в которых есть этот заголовок
					],
					{   
						{"1", "На начало года","1"}, 
						{"2", "Поступило","1"},
						{"3", "Выбыло","1"},
						{"4", "На конец отчетного периода всего","1"},
						{"5", "На конец отчетного периода всего, и.т.ч. полностью самортизированных","1"},
						
						{"1", "На начало года","2"},
						{"2", "Поступило","2"},
						{"3", "Выбыло","2"},
						{"4", "На конец периода","2"}, 
						
						{"1", "На начало года","3"},
						{"2", "Создано","3"},
						{"3", "Списано","3"},
						{"4", "На конец периода","3"}, 

						{"1", "На начало года","4,7"},
						{"2", "На конец периода","4,7"}, 

						{"1", "На начало года","5"},
						{"2", "Получено","5"},
						{"3", "Погашено","5"},
						{"4", "На конец периода","5"}, 

						{"1", "Пpичитается по расчету","6"},
						{"2", "Изpасходовано","6"},
						{"3", "Фактически уплачено","6"}
					}),
	
					// разворачиваем по строкам через запятую
						ExpandList = Table.ExpandListColumn(
							Table.TransformColumns(Источник, 
									{{"НомерРаздела", Splitter.SplitTextByDelimiter(",", QuoteStyle.Csv), 
									let itemType = (type nullable text) meta [Serialized.Text = true] in type {itemType}}}), 
									"НомерРаздела"),
					
					// 	объединяем два столбца в новый используя функцию
						CombineCol = 
							Table.CombineColumns(ExpandList, 
									{"НомерРаздела", "IndexIn"},
									Combiner.CombineTextByDelimiter("", QuoteStyle.None),
									"Заголовок_ID"
							),
					// 	Написать надо что получилось в итоге!!!
						TransCol   = Table.TransformColumnTypes(CombineCol,{{"Заголовок_ID", Int64.Type}})
				in  TransCol
		]	
]
in
	Справочник